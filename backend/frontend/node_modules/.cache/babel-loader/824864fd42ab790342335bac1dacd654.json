{"ast":null,"code":"var _jsxFileName = \"/home/tuto/cours/js/ecom/frontend/src/screens/OrderScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport moment from \"moment\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = ({\n  match\n}) => {\n  _s();\n\n  // state\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    error,\n    loading\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    succes: successPay\n  } = orderPay;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2);\n  } // paypal api public key for proshop app\n  // AWgVqJgHr7qGohwDP_qbb3uxo7Ngt87APD_4xcIj2gXLsfYiZysBwJuC76mq5Ab1P-CnHOhF6W3nGa5Q\n  // Paypal script\n\n\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src = \"https://www.paypal.com/sdk/js?client-id=AWgVqJgHr7qGohwDP_qbb3uxo7Ngt87APD_4xcIj2gXLsfYiZysBwJuC76mq5Ab1P-CnHOhF6W3nGa5Q\";\n    script.assync = true;\n\n    script.onload = () => {\n      setSdkReady(true);\n    };\n\n    document.body.appendChild(script);\n  }; // State modification\n\n\n  useEffect(() => {\n    if (!order || successPay || order._id !== Number(orderId)) {\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay]);\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return loading ?\n  /*#__PURE__*/\n  // do we have a loading status ?\n  _jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this) // yes so show the loader\n  : error ?\n  /*#__PURE__*/\n  // ok no loading but do we have and error ?\n  _jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this) // yes so show the error message\n  :\n  /*#__PURE__*/\n  // no error and no loading so show me the orderscreen !!!!\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order: \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Shipping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Shipping: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), order.shippingAddress.address, \", \", order.shippingAddress.city, \",\", \" \", order.shippingAddress.postalCode, \",\", \" \", order.shippingAddress.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\" \", \"Your order has been delivered on\", \" \", moment(order.deliveredAt).format(\"MMMM Do, YYYY\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"warning\",\n              children: \"Not delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Payment by: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\" \", \"Your order has been paid on\", \" \", moment(order.paidAt).format(\"MMMM Do, YYYY\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"warning\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"info\",\n              children: [\"Order is empty ! \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/\",\n                children: \"Back To Products\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 1,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Link, {\n                      to: `/product/${item.product}`,\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 27\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.price, \"$ x \", item.qty, \" =\", \" \", (item.price * item.qty).toFixed(2), \"$\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Item: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"Shipping: \", /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"(free above 100$)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"Tax: \", /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"(TVA 20%)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 26\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OrderScreen, \"Ldp/cQPEkPEAb77fwj7HRJ0HuZg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/home/tuto/cours/js/ecom/frontend/src/screens/OrderScreen.jsx"],"names":["moment","useState","useEffect","Button","Row","Col","ListGroup","Image","Card","Link","useDispatch","useSelector","Message","Loader","getOrderDetails","payOrder","OrderScreen","match","orderId","params","id","dispatch","sdkReady","setSdkReady","orderDetails","state","order","error","loading","orderPay","loadingPay","succes","successPay","itemsPrice","orderItems","reduce","acc","item","price","qty","toFixed","addPayPalScript","script","document","createElement","type","src","assync","onload","body","appendChild","_id","Number","isPaid","window","paypal","successPaymentHandler","paymentResult","user","name","email","shippingAddress","address","city","postalCode","country","isDelivered","deliveredAt","format","paymentMethod","paidAt","length","map","index","image","product","shippingPrice","taxPrice","totalPrice"],"mappings":"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","sourcesContent":["import moment from \"moment\";\nimport { useState, useEffect } from \"react\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\n\nconst OrderScreen = ({ match }) => {\n  // state\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, error, loading } = orderDetails;\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, succes: successPay } = orderPay;\n\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems\n      .reduce((acc, item) => acc + item.price * item.qty, 0)\n      .toFixed(2);\n  }\n  // paypal api public key for proshop app\n  // AWgVqJgHr7qGohwDP_qbb3uxo7Ngt87APD_4xcIj2gXLsfYiZysBwJuC76mq5Ab1P-CnHOhF6W3nGa5Q\n\n  // Paypal script\n  const addPayPalScript = () => {\n    const script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    script.src =\n      \"https://www.paypal.com/sdk/js?client-id=AWgVqJgHr7qGohwDP_qbb3uxo7Ngt87APD_4xcIj2gXLsfYiZysBwJuC76mq5Ab1P-CnHOhF6W3nGa5Q\";\n    script.assync = true;\n    script.onload = () => {\n      setSdkReady(true);\n    };\n    document.body.appendChild(script);\n  };\n\n  // State modification\n  useEffect(() => {\n    if (!order || successPay || order._id !== Number(orderId)) {\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, order, orderId, successPay]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  return loading ? ( // do we have a loading status ?\n    <Loader /> // yes so show the loader\n  ) : error ? ( // ok no loading but do we have and error ?\n    <Message variant=\"danger\">{error}</Message> // yes so show the error message\n  ) : (\n    // no error and no loading so show me the orderscreen !!!!\n    <div>\n      <h1>Order: {order._id}</h1>\n      <Row>\n        {/* Order details  */}\n        <Col md={8}>\n          <ListGroup variant=\"flush\">\n            {/* Shipping: user and address */}\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong>\n                {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Shipping: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n                {order.shippingAddress.postalCode},{\" \"}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant=\"success\">\n                  {\" \"}\n                  Your order has been delivered on{\" \"}\n                  {moment(order.deliveredAt).format(\"MMMM Do, YYYY\")}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not delivered</Message>\n              )}\n            </ListGroup.Item>\n            {/* Payment method */}\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Payment by: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant=\"success\">\n                  {\" \"}\n                  Your order has been paid on{\" \"}\n                  {moment(order.paidAt).format(\"MMMM Do, YYYY\")}\n                </Message>\n              ) : (\n                <Message variant=\"warning\">Not Paid</Message>\n              )}\n            </ListGroup.Item>\n            {/* Items */}\n            <ListGroup.Item>\n              <h2>Order items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message variant=\"info\">\n                  Order is empty ! <Link to=\"/\">Back To Products</Link>\n                </Message>\n              ) : (\n                <ListGroup variant=\"flush\">\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        {/* image */}\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        {/* Name */}\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>{\" \"}\n                        </Col>\n                        {/* Total $  */}\n                        <Col md={4}>\n                          {item.price}$ x {item.qty} ={\" \"}\n                          {(item.price * item.qty).toFixed(2)}$\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        {/* Order Resume with taxes */}\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              {/* Price */}\n              <ListGroup.Item>\n                <Row>\n                  <Col>Item: </Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {/* Shipping */}\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    Shipping: <p>(free above 100$)</p>\n                  </Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {/* Taxes */}\n              <ListGroup.Item>\n                <Row>\n                  <Col>\n                    Tax: <p>(TVA 20%)</p>\n                  </Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {/* total */}\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total: </Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default OrderScreen;\n"]},"metadata":{},"sourceType":"module"}