{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, useUpdateReducer } from \"./reducers/userReducers\";\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from \"./reducers/orderReducers\";\nconst reducer = combineReducers({\n  // products\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  // user\n  usersList: userListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: useUpdateReducer,\n  // order\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst shippingAddress = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddress\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/tuto/cours/js/ecom/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","useUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","cart","productDelete","productCreate","productUpdate","usersList","userLogin","userRegister","userDetails","userUpdateProfile","userDelete","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddress","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,oBAHF,EAIEC,oBAJF,EAKEC,oBALF,QAMO,4BANP;AAOA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,gBAPF,QAQO,yBARP;AASA,SACEC,kBADF,EAEEC,mBAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC9B;AACAsB,EAAAA,WAAW,EAAElB,kBAFiB;AAG9BmB,EAAAA,cAAc,EAAElB,qBAHc;AAI9BmB,EAAAA,IAAI,EAAEf,WAJwB;AAK9BgB,EAAAA,aAAa,EAAEnB,oBALe;AAM9BoB,EAAAA,aAAa,EAAEnB,oBANe;AAO9BoB,EAAAA,aAAa,EAAEnB,oBAPe;AAQ9B;AACAoB,EAAAA,SAAS,EAAEd,eATmB;AAU9Be,EAAAA,SAAS,EAAEnB,gBAVmB;AAW9BoB,EAAAA,YAAY,EAAEnB,mBAXgB;AAY9BoB,EAAAA,WAAW,EAAEnB,kBAZiB;AAa9BoB,EAAAA,iBAAiB,EAAEnB,wBAbW;AAc9BoB,EAAAA,UAAU,EAAElB,iBAdkB;AAe9BmB,EAAAA,UAAU,EAAElB,gBAfkB;AAgB9B;AACAmB,EAAAA,WAAW,EAAElB,kBAjBiB;AAkB9BmB,EAAAA,YAAY,EAAElB,mBAlBgB;AAmB9BmB,EAAAA,QAAQ,EAAElB,eAnBoB;AAoB9BmB,EAAAA,WAAW,EAAElB;AApBiB,CAAD,CAA/B;AAuBA,MAAMmB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GAEzB,EAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMI,eAAe,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADoB,GAEpB,EAFJ;AAIA,MAAMK,YAAY,GAAG;AACnBtB,EAAAA,IAAI,EAAE;AAAEuB,IAAAA,SAAS,EAAER,oBAAb;AAAmCM,IAAAA,eAAe,EAAEA;AAApD,GADa;AAEnBhB,EAAAA,SAAS,EAAE;AAAEmB,IAAAA,QAAQ,EAAEJ;AAAZ;AAFQ,CAArB;AAKA,MAAMK,UAAU,GAAG,CAAC/C,KAAD,CAAnB;AAEA,MAAMgD,KAAK,GAAGnD,WAAW,CACvBsB,OADuB,EAEvByB,YAFuB,EAGvB3C,mBAAmB,CAACF,eAAe,CAAC,GAAGgD,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  useUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListMyReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n  // products\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  // user\n  usersList: userListReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: useUpdateReducer,\n  // order\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst shippingAddress = localStorage.getItem(\"shippingAddress\")\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n  : {};\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddress },\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}